### STRUCTURAL VARIANT ANNOTATION ### 


# download new vep cache version
rule get_vep_cache:
    output:
      directory("annotation/vep/cache")
    params:
      species="mus_musculus",
      build="GRCm38",
      release="101"
    log:
      "logs/vep/cache.log"
    # cache: True 
    wrapper:
      "0.67.0/bio/vep/cache"


# download vep plugins
rule get_vep_plugins:
    output:
      directory("annotation/vep/plugins")
    log:
      "logs/vep/plugins.log"
    params:
      release=101
    wrapper:
      "0.67.0/bio/vep/plugins"



# annotate final vcf with VEP
rule vep_annotate:
    input:
      calls="01_mice_lines_smoove/04_pasted/cohort.smoove.square.vcf.gz",  
      cache="annotation/vep/cache",
      plugins="annotation/vep/plugins",
      fasta={REF}
    output:
      calls="01_mice_lines_smoove/05_annotated/mice_variants.vep.annotated.vcf",  
      stats="01_mice_lines_smoove/05_annotated/mice_variants.vep.annotated.html"
    params:
      plugin=["GO"],
      extra="--coding_only --per_gene --gene_phenotype --refseq --symbol --protein --sift b --overlaps" 
    log:
      "logs/vep/annotate.log"
    threads: 4
    wrapper:
      "0.67.0/bio/vep/annotate"

#### use conda vep instead of the wrapper

rule vep_annotate_conda:
    input:
      calls="01_mice_lines_smoove/04_pasted/cohort.smoove.square.vcf",  
      cache="annotation/vep/cache",
      plugins="annotation/vep/plugins",
      ref="../../../reference_genome_ensembl/Mus_musculus.GRCm38.dna.primary_assembly.fa"
    output:
      annotated="01_mice_lines_smoove/05_annotated/mice_variants.vep.annotated.vcf",
      stats="01_mice_lines_smoove/05_annotated/mice_variants.vep.annotated.html"
    params:
      plugin=["GO"],
      extra="--coding_only --per_gene --gene_phenotype --symbol --protein --sift b --overlaps" 
    log:
      "logs/vep/annotate.log"
    threads: 4
    conda:
      "envs/vep.yml"
    shell:
      "vep -i {input.calls} --species mus_musculus --cache --dir_cache {input.cache} --dir_plugins {input.plugins} --fasta {input.ref} {params.extra} {params.plugin} --o {output.annotated} --sf {output.stats} --fork 4 --vcf --format vcf 2> {log}"



  vep \
  -i 01_mice_lines_smoove/04_pasted/cohort.smoove.square.vcf \
  --species mus_musculus \
  --cache --dir_cache $DIR_CACHE \
  --refseq \
  --sf mice_variants.vep_summary.html \
  --dir 01_mice_lines_smoove/05_annotated \
  --fasta $REF \
  --o mice_variants.vep.annotated.vcf \
  --offline \
  --vcf \
  --fork 4 \
  --format vcf \
  --symbol \
  --protein \
  --sift b \
  --gene_phenotype \
  --per_gene \
  --coding_only \
  --overlaps \
  --max_sv_size 200000000 \
  --force_overwrite 2> vep.anno.log



# "Phenotypes,file=annotation/vep/phenotypes.gff.gz,include_types=Gene"],


# download snpeff ref db
rule get_snpeff_db:
    output:
        directory("annotation/snpeff/GRCm38.86")
    log:
        "logs/snpeff/snpEff_GRCm38.86_download.log"
    params:
        reference="GRCm38.86"
    wrapper:
        "0.67.0/bio/snpeff/download"


# annotate final vcf with SnpEff
rule snpeff_annotate:
    input:
        calls="01_mice_lines_smoove/04_pasted/cohort.smoove.square.vcf", 
        db="annotation/snpeff/GRCm38.86" 
    output:
        calls="01_mice_lines_smoove/annotated/mice_variants.snpeff.annotated.vcf",   
        stats="01_mice_lines_smoove/annotated/mice_variants.snpeff.annotated.html",  
        csvstats="01_mice_lines_smoove/annotated/mice_variants.snpeff.annotated.csv" 
    log:
        "logs/snpeff/annotate.log"
    params:
        extra="-Xmx4g"         
    wrapper:
        "0.67.0/bio/snpeff/annotate"









